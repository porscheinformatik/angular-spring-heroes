name: Build, Test and Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build-test-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build application
        run: mvn -B package jib:dockerBuild
      - name: Build acceptance tests
        run: docker build -t heroes-acceptence-tests heroes-acceptence-tests
      - name: Run app for tests
        run: |
          docker run --name ash -d --rm -p 8080:8080 porscheinformatik/angular-spring-heroes
          sleep 30
          docker run -i --rm --link ash heroes-acceptence-tests --config baseUrl=http://ash:8080
      - name: Push image to Docker Hub
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: docker push porscheinformatik/angular-spring-heroes
      - name: Push image to ghcr.io
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          echo ${{ secrets.GHCR_PASSWORD }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
          docker tag porscheinformatik/angular-spring-heroes ghcr.io/porscheinformatik/angular-spring-heroes
          docker push ghcr.io/porscheinformatik/angular-spring-heroes

  deploy:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: build-test-and-push
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://ash.k8s.derkoe.dev
    steps:
      - uses: actions/checkout@v2
      - uses: Azure/setup-helm@v1
      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > /tmp/kubeconfig
          helm ls --kubeconfig /tmp/kubeconfig
          helm upgrade --kubeconfig /tmp/kubeconfig --install --atomic --set ingress.enabled=true --set ingress.host=ash.k8s.derkoe.dev --set postgresql.enabled=true --set postgresql.postgresPassword=${{ secrets.POSTGRESQL_PASSWORD }} ash charts/angular-spring-heroes
